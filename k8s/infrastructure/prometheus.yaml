apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: miniblog
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.46.0
          ports:
            - containerPort: 9090
          args:
            - --enable-feature=exemplar-storage
            - --config.file=/etc/prometheus/prometheus.yml
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: miniblog
spec:
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-configmap
  namespace: miniblog
data:
  prometheus.yml: |
    global:
      scrape_interval: 2s
      evaluation_interval: 2s

    scrape_configs:
      - job_name: 'api-gateway'
        metrics_path: '/actuator/prometheus'
        static_configs:
          - targets: ['api-gateway-service:4040'] 
            labels:
              application: 'API Gateway'
      - job_name: 'image-service'
        metrics_path: '/actuator/prometheus'
        static_configs:
          - targets: ['image-service-service:4041']
            labels:
              application: 'Image Service'
      - job_name: 'post-service'
        metrics_path: '/actuator/prometheus'
        static_configs:
          - targets: ['post-service-service:4042']
            labels:
              application: 'Post Service'
      - job_name: 'query-service'
        metrics_path: '/actuator/prometheus'
        static_configs:
          - targets: ['query-service-service:4043']
            labels:
              application: 'Query Service'