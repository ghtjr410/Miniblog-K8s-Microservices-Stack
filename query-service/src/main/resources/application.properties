spring.application.name=query-service

# Server Port Number
server.port=4043

# Swagger
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

# Prometheus
management.endpoints.web.exposure.include=health, info, metrics, prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=query-service
management.tracing.sampling.probability=1.0

#Loki URL
loki.url=http://localhost:3100/loki/api/v1/push

# Zipkin URL
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans

# Kafka
spring.kafka.bootstrap-servers=localhost:9092

# Consumer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.properties.schema.registry.url=http://localhost:8085
spring.kafka.consumer.specific-avro-reader=true

# Consumer Group
query.consumer.group-id=query-service-group

# Topic Name
post.created.event.topic.name=post.created
post.updated.event.topic.name=post.updated
post.deleted.event.topic.name=post.deleted
comment.created.event.topic.name=comment.created
comment.updated.event.topic.name=comment.updated
comment.deleted.event.topic.name=comment.deleted
like.created.event.topic.name=like.created
like.deleted.event.topic.name=like.deleted
viewcount.updated.event.topic.name=viewcount.updated
profile.created.event.topic.name=profile.created
profile.updated.event.topic.name=profile.updated
account.deleted.event.topic.name=account.deleted

# Mongo Database
spring.data.mongodb.uri=${SPRING_DATA_MONGODB_URI}
spring.data.mongodb.auto-index-creation=true